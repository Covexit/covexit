{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = _interopRequireDefault(require(\"../validators/isNode\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    const type = node && node.type || JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}","map":{"version":3,"sources":["/workspace/covexit/frontend/node_modules/@babel/types/lib/asserts/assertNode.js"],"names":["Object","defineProperty","exports","value","default","assertNode","_isNode","_interopRequireDefault","require","obj","__esModule","node","type","JSON","stringify","TypeError"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,UAAlB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,SAASJ,UAAT,CAAoBM,IAApB,EAA0B;AACxB,MAAI,CAAC,CAAC,GAAGL,OAAO,CAACF,OAAZ,EAAqBO,IAArB,CAAL,EAAiC;AAC/B,UAAMC,IAAI,GAAGD,IAAI,IAAIA,IAAI,CAACC,IAAb,IAAqBC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAlC;AACA,UAAM,IAAII,SAAJ,CAAe,6BAA4BH,IAAK,GAAhD,CAAN;AACD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = _interopRequireDefault(require(\"../validators/isNode\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    const type = node && node.type || JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}"]},"metadata":{},"sourceType":"script"}