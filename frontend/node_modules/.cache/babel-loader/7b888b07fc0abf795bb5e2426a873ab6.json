{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeProperties;\n\nvar _constants = require(\"../constants\");\n\nconst CLEAR_KEYS = [\"tokens\", \"start\", \"end\", \"loc\", \"raw\", \"rawValue\"];\n\nconst CLEAR_KEYS_PLUS_COMMENTS = _constants.COMMENT_KEYS.concat([\"comments\"]).concat(CLEAR_KEYS);\n\nfunction removeProperties(node, opts = {}) {\n  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n\n  for (const key of map) {\n    if (node[key] != null) node[key] = undefined;\n  }\n\n  for (const key of Object.keys(node)) {\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\n  }\n\n  const symbols = Object.getOwnPropertySymbols(node);\n\n  for (const sym of symbols) {\n    node[sym] = null;\n  }\n}","map":{"version":3,"sources":["/workspace/covexit/frontend/node_modules/@babel/types/lib/modifications/removeProperties.js"],"names":["Object","defineProperty","exports","value","default","removeProperties","_constants","require","CLEAR_KEYS","CLEAR_KEYS_PLUS_COMMENTS","COMMENT_KEYS","concat","node","opts","map","preserveComments","key","undefined","keys","symbols","getOwnPropertySymbols","sym"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,gBAAlB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AAEA,MAAMC,UAAU,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,KAApB,EAA2B,KAA3B,EAAkC,KAAlC,EAAyC,UAAzC,CAAnB;;AAEA,MAAMC,wBAAwB,GAAGH,UAAU,CAACI,YAAX,CAAwBC,MAAxB,CAA+B,CAAC,UAAD,CAA/B,EAA6CA,MAA7C,CAAoDH,UAApD,CAAjC;;AAEA,SAASH,gBAAT,CAA0BO,IAA1B,EAAgCC,IAAI,GAAG,EAAvC,EAA2C;AACzC,QAAMC,GAAG,GAAGD,IAAI,CAACE,gBAAL,GAAwBP,UAAxB,GAAqCC,wBAAjD;;AAEA,OAAK,MAAMO,GAAX,IAAkBF,GAAlB,EAAuB;AACrB,QAAIF,IAAI,CAACI,GAAD,CAAJ,IAAa,IAAjB,EAAuBJ,IAAI,CAACI,GAAD,CAAJ,GAAYC,SAAZ;AACxB;;AAED,OAAK,MAAMD,GAAX,IAAkBhB,MAAM,CAACkB,IAAP,CAAYN,IAAZ,CAAlB,EAAqC;AACnC,QAAII,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,IAAkBJ,IAAI,CAACI,GAAD,CAAJ,IAAa,IAAnC,EAAyCJ,IAAI,CAACI,GAAD,CAAJ,GAAYC,SAAZ;AAC1C;;AAED,QAAME,OAAO,GAAGnB,MAAM,CAACoB,qBAAP,CAA6BR,IAA7B,CAAhB;;AAEA,OAAK,MAAMS,GAAX,IAAkBF,OAAlB,EAA2B;AACzBP,IAAAA,IAAI,CAACS,GAAD,CAAJ,GAAY,IAAZ;AACD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = removeProperties;\n\nvar _constants = require(\"../constants\");\n\nconst CLEAR_KEYS = [\"tokens\", \"start\", \"end\", \"loc\", \"raw\", \"rawValue\"];\n\nconst CLEAR_KEYS_PLUS_COMMENTS = _constants.COMMENT_KEYS.concat([\"comments\"]).concat(CLEAR_KEYS);\n\nfunction removeProperties(node, opts = {}) {\n  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n\n  for (const key of map) {\n    if (node[key] != null) node[key] = undefined;\n  }\n\n  for (const key of Object.keys(node)) {\n    if (key[0] === \"_\" && node[key] != null) node[key] = undefined;\n  }\n\n  const symbols = Object.getOwnPropertySymbols(node);\n\n  for (const sym of symbols) {\n    node[sym] = null;\n  }\n}"]},"metadata":{},"sourceType":"script"}