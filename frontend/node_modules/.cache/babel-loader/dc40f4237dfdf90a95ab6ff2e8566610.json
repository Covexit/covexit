{"ast":null,"code":"var _jsxFileName = \"/workspace/covexit/frontend/src/views/Onboarding.js\";\nimport React, { useState } from 'react';\nimport './Onboarding.scss';\nimport Button from \"../components/Button/Button\";\nimport SteppedForm from \"../components/SteppedForm/SteppedForm\";\nimport InlineInputs from \"../components/InlineInputs/InlineInputs\";\nimport Fields from \"../components/Fields/Fields\";\n\nconst Onboarding = props => {\n  const match = props.match;\n  const step = match.params.step;\n  const [categories, setCategories] = useState([]);\n  const categoriesAreSet = categories.some(e => !!e);\n  const [product, setProduct] = useState({\n    name: '',\n    category: '',\n    price: '',\n    phone: '',\n    description: '',\n    photo: ''\n  });\n\n  const onChange = event => {\n    setProduct({ ...product,\n      [event.target.name]: event.target.files || event.target.value\n    });\n  };\n\n  const steps = [{\n    head: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Create a category\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"First, let\\u2019s help your customers find the products they\\u2019re searching for by creating a category.\")),\n    footer: categoriesAreSet && /*#__PURE__*/React.createElement(Button, {\n      label: \"Next\",\n      to: '/stores/1/onboarding/1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }),\n    body: /*#__PURE__*/React.createElement(InlineInputs, {\n      addLabel: \"Add category\",\n      values: categories,\n      onAdd: () => setCategories([...categories, \"\"]),\n      onChange: (val, i) => setCategories(prev => {\n        prev[i] = val;\n        return prev.concat();\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    })\n  }, {\n    head: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Finally, your first product!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"You are close to getting your store online! Just one last step is needed. To create your first online product.\")),\n    footer: /*#__PURE__*/React.createElement(Button, {\n      label: \"Add Product\",\n      to: '/stores/1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }),\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Fields.TextInput, {\n      onChange: onChange,\n      placeholder: \"Name of the product\",\n      name: \"name\",\n      value: product.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Fields.TextInput, {\n      onChange: onChange,\n      placeholder: \"Category\",\n      name: \"category\",\n      value: product.category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Fields.TextInput, {\n      onChange: onChange,\n      placeholder: \"Price\",\n      name: \"price\",\n      value: product.price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Fields.TextInput, {\n      onChange: onChange,\n      placeholder: \"Phone number\",\n      name: \"phone\",\n      value: product.phone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Fields.TextArea, {\n      onChange: onChange,\n      placeholder: \"Description of your product\",\n      name: \"description\",\n      value: product.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Fields.FileUpload, {\n      onChange: onChange,\n      label: \"Upload photo\",\n      name: \"photo\",\n      value: product.photo,\n      helpText: \"JPEG .JPG .PNG (Just these file formats will work)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }))\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `Onboarding Onboarding--${step}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SteppedForm, Object.assign({}, steps[step], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Onboarding;","map":{"version":3,"sources":["/workspace/covexit/frontend/src/views/Onboarding.js"],"names":["React","useState","Button","SteppedForm","InlineInputs","Fields","Onboarding","props","match","step","params","categories","setCategories","categoriesAreSet","some","e","product","setProduct","name","category","price","phone","description","photo","onChange","event","target","files","value","steps","head","footer","body","val","i","prev","concat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AAEA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMY,gBAAgB,GAAGF,UAAU,CAACG,IAAX,CAAgBC,CAAC,IAAI,CAAC,CAACA,CAAvB,CAAzB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC;AAACiB,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,QAAQ,EAAE,EAArB;AAAyBC,IAAAA,KAAK,EAAE,EAAhC;AAAoCC,IAAAA,KAAK,EAAE,EAA3C;AAA+CC,IAAAA,WAAW,EAAE,EAA5D;AAAgEC,IAAAA,KAAK,EAAE;AAAvE,GAAD,CAAtC;;AACA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BR,IAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAc,OAACS,KAAK,CAACC,MAAN,CAAaR,IAAd,GAAqBO,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsBF,KAAK,CAACC,MAAN,CAAaE;AAAtE,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAG,CACZ;AACEC,IAAAA,IAAI,eAAG,uDACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADK,eAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oHAFK,CADT;AAMEC,IAAAA,MAAM,EAAElB,gBAAgB,iBACtB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,EAAE,EAAE,wBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ;AAQEmB,IAAAA,IAAI,eAAE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAC,cAAvB;AAAsC,MAAA,MAAM,EAAErB,UAA9C;AACc,MAAA,KAAK,EAAE,MAAMC,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgB,EAAhB,CAAD,CADxC;AAEc,MAAA,QAAQ,EAAE,CAACsB,GAAD,EAAMC,CAAN,KAAYtB,aAAa,CAACuB,IAAI,IAAI;AAC1CA,QAAAA,IAAI,CAACD,CAAD,CAAJ,GAAUD,GAAV;AACA,eAAOE,IAAI,CAACC,MAAL,EAAP;AACD,OAHkC,CAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARR,GADY,EAgBZ;AACEN,IAAAA,IAAI,eAAG,uDACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADK,eAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wHAFK,CADT;AAMEC,IAAAA,MAAM,eAAE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,EAAE,EAAE,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANV;AAOEC,IAAAA,IAAI,eAAE,uDACJ,oBAAC,MAAD,CAAQ,SAAR;AAAkB,MAAA,QAAQ,EAAER,QAA5B;AAAsC,MAAA,WAAW,EAAC,qBAAlD;AAAwE,MAAA,IAAI,EAAC,MAA7E;AAAoF,MAAA,KAAK,EAAER,OAAO,CAACE,IAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,eAEJ,oBAAC,MAAD,CAAQ,SAAR;AAAkB,MAAA,QAAQ,EAAEM,QAA5B;AAAsC,MAAA,WAAW,EAAC,UAAlD;AAA6D,MAAA,IAAI,EAAC,UAAlE;AAA6E,MAAA,KAAK,EAAER,OAAO,CAACG,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,eAGJ,oBAAC,MAAD,CAAQ,SAAR;AAAkB,MAAA,QAAQ,EAAEK,QAA5B;AAAsC,MAAA,WAAW,EAAC,OAAlD;AAA0D,MAAA,IAAI,EAAC,OAA/D;AAAuE,MAAA,KAAK,EAAER,OAAO,CAACI,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHI,eAIJ,oBAAC,MAAD,CAAQ,SAAR;AAAkB,MAAA,QAAQ,EAAEI,QAA5B;AAAsC,MAAA,WAAW,EAAC,cAAlD;AAAiE,MAAA,IAAI,EAAC,OAAtE;AAA8E,MAAA,KAAK,EAAER,OAAO,CAACK,KAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJI,eAKJ,oBAAC,MAAD,CAAQ,QAAR;AAAiB,MAAA,QAAQ,EAAEG,QAA3B;AAAqC,MAAA,WAAW,EAAC,6BAAjD;AAA+E,MAAA,IAAI,EAAC,aAApF;AAAkG,MAAA,KAAK,EAAER,OAAO,CAACM,WAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALI,eAMJ,oBAAC,MAAD,CAAQ,UAAR;AAAmB,MAAA,QAAQ,EAAEE,QAA7B;AAAuC,MAAA,KAAK,EAAC,cAA7C;AAA4D,MAAA,IAAI,EAAC,OAAjE;AAAyE,MAAA,KAAK,EAAER,OAAO,CAACO,KAAxF;AACmB,MAAA,QAAQ,EAAC,oDAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANI;AAPR,GAhBY,CAAd;AAoCA,sBACE;AAAK,IAAA,SAAS,EAAG,0BAAyBd,IAAK,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD,oBAAiBoB,KAAK,CAACpB,IAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CArDD;;AAuDA,eAAeH,UAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport './Onboarding.scss';\nimport Button from \"../components/Button/Button\";\nimport SteppedForm from \"../components/SteppedForm/SteppedForm\";\nimport InlineInputs from \"../components/InlineInputs/InlineInputs\";\nimport Fields from \"../components/Fields/Fields\";\n\nconst Onboarding = (props) => {\n  const match = props.match;\n  const step = match.params.step;\n\n  const [categories, setCategories] = useState([]);\n  const categoriesAreSet = categories.some(e => !!e);\n\n  const [product, setProduct] = useState({name: '', category: '', price: '', phone: '', description: '', photo: ''});\n  const onChange = (event) => {\n    setProduct({ ...product, [event.target.name]: event.target.files || event.target.value });\n  };\n\n  const steps = [\n    {\n      head: (<>\n        <h1>Create a category</h1>\n        <p>First, let’s help your customers find the products they’re searching\n          for by creating a category.</p>\n      </>),\n      footer: categoriesAreSet &&\n        <Button label=\"Next\" to={'/stores/1/onboarding/1'}/>,\n      body: <InlineInputs addLabel=\"Add category\" values={categories}\n                          onAdd={() => setCategories([...categories, \"\"])}\n                          onChange={(val, i) => setCategories(prev => {\n                            prev[i] = val;\n                            return prev.concat();\n                          })}/>,\n    },\n    {\n      head: (<>\n        <h1>Finally, your first product!</h1>\n        <p>You are close to getting your store online! Just one last step is\n          needed. To create your first online product.</p>\n      </>),\n      footer: <Button label=\"Add Product\" to={'/stores/1'}/>,\n      body: <>\n        <Fields.TextInput onChange={onChange} placeholder=\"Name of the product\" name=\"name\" value={product.name}/>\n        <Fields.TextInput onChange={onChange} placeholder=\"Category\" name=\"category\" value={product.category}/>\n        <Fields.TextInput onChange={onChange} placeholder=\"Price\" name=\"price\" value={product.price}/>\n        <Fields.TextInput onChange={onChange} placeholder=\"Phone number\" name=\"phone\" value={product.phone}/>\n        <Fields.TextArea onChange={onChange} placeholder=\"Description of your product\" name=\"description\" value={product.description}/>\n        <Fields.FileUpload onChange={onChange} label=\"Upload photo\" name=\"photo\" value={product.photo}\n                           helpText=\"JPEG .JPG .PNG (Just these file formats will work)\"/>\n      </>,\n    },\n  ];\n\n\n  return (\n    <div className={`Onboarding Onboarding--${step}`}>\n      <SteppedForm {...steps[step]} />\n    </div>\n  );\n};\n\nexport default Onboarding\n\n"]},"metadata":{},"sourceType":"module"}