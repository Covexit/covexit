{"ast":null,"code":"var InfoBox = /*#__PURE__*/function () {\n  function InfoBox(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.extend(InfoBox, google.maps.OverlayView); // Standard options (in common with google.maps.InfoWindow):\n\n    this.content = options.content || '';\n    this.disableAutoPan = options.disableAutoPan || false;\n    this.maxWidth = options.maxWidth || 0;\n    this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0);\n    this.position = options.position || new google.maps.LatLng(0, 0);\n    this.zIndex = options.zIndex || null; // Additional options (unique to InfoBox):\n\n    this.boxClass = options.boxClass || 'infoBox';\n    this.boxStyle = options.boxStyle || {};\n    this.closeBoxMargin = options.closeBoxMargin || '2px';\n    this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif';\n\n    if (options.closeBoxURL === '') {\n      this.closeBoxURL = '';\n    }\n\n    this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1);\n\n    if (typeof options.visible === 'undefined') {\n      if (typeof options.isHidden === 'undefined') {\n        options.visible = true;\n      } else {\n        options.visible = !options.isHidden;\n      }\n    }\n\n    this.isHidden = !options.visible;\n    this.alignBottom = options.alignBottom || false;\n    this.pane = options.pane || 'floatPane';\n    this.enableEventPropagation = options.enableEventPropagation || false;\n    this.div = null;\n    this.closeListener = null;\n    this.moveListener = null;\n    this.mapListener = null;\n    this.contextListener = null;\n    this.eventListeners = null;\n    this.fixedWidthSet = null;\n  }\n\n  var _proto = InfoBox.prototype;\n\n  _proto.createInfoBoxDiv = function createInfoBoxDiv() {\n    var _this = this; // This handler prevents an event in the InfoBox from being passed on to the map.\n\n\n    function cancelHandler(event) {\n      event.cancelBubble = true;\n\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      }\n    } // This handler ignores the current event in the InfoBox and conditionally prevents\n    // the event from being passed on to the map. It is used for the contextmenu event.\n    // eslint-disable-next-line  @getify/proper-arrows/this\n\n\n    var ignoreHandler = function ignoreHandler(event) {\n      event.returnValue = false;\n\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n\n      if (!_this.enableEventPropagation) {\n        cancelHandler(event);\n      }\n    };\n\n    if (!this.div) {\n      this.div = document.createElement('div');\n      this.setBoxStyle();\n\n      if (typeof this.content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + this.content;\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg();\n        this.div.appendChild(this.content);\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      var panes = this.getPanes();\n      panes[this.pane].appendChild(this.div); // Add the InfoBox div to the DOM\n\n      this.addClickHandler();\n\n      if (this.div.style.width) {\n        this.fixedWidthSet = true;\n      } else {\n        if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n          this.div.style.width = this.maxWidth + 'px';\n          this.fixedWidthSet = true;\n        } else {\n          // The following code is needed to overcome problems with MSIE\n          var bw = this.getBoxWidths();\n          this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px';\n          this.fixedWidthSet = false;\n        }\n      }\n\n      this.panBox(this.disableAutoPan);\n\n      if (!this.enableEventPropagation) {\n        this.eventListeners = []; // Cancel event propagation.\n        // Note: mousemove not included (to resolve Issue 152)\n\n        var events = ['mousedown', 'mouseover', 'mouseout', 'mouseup', 'click', 'dblclick', 'touchstart', 'touchend', 'touchmove'];\n\n        for (var i = 0; i < events.length; i++) {\n          this.eventListeners.push(google.maps.event.addDomListener(this.div, events[i], cancelHandler));\n        } // Workaround for Google bug that causes the cursor to change to a pointer\n        // when the mouse moves over a marker underneath InfoBox.\n\n\n        this.eventListeners.push(google.maps.event.addDomListener(this.div, 'mouseover', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        function () {\n          if (_this.div) {\n            _this.div.style.cursor = 'default';\n          }\n        }));\n      }\n\n      this.contextListener = google.maps.event.addDomListener(this.div, 'contextmenu', ignoreHandler);\n      /**\r\n       * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\r\n       * @name InfoBox#domready\r\n       * @event\r\n       */\n\n      google.maps.event.trigger(this, 'domready');\n    }\n  };\n\n  _proto.getCloseBoxImg = function getCloseBoxImg() {\n    var img = '';\n\n    if (this.closeBoxURL !== '') {\n      img = '<img';\n      img += \" src='\" + this.closeBoxURL + \"'\";\n      img += ' align=right'; // Do this because Opera chokes on style='float: right;'\n\n      img += \" style='\";\n      img += ' position: relative;'; // Required by MSIE\n\n      img += ' cursor: pointer;';\n      img += ' margin: ' + this.closeBoxMargin + ';';\n      img += \"'>\";\n    }\n\n    return img;\n  };\n\n  _proto.addClickHandler = function addClickHandler() {\n    if (this.div && this.div.firstChild && this.closeBoxURL !== '') {\n      var closeBox = this.div.firstChild;\n      this.closeListener = google.maps.event.addDomListener(closeBox, 'click', this.getCloseClickHandler());\n    } else {\n      this.closeListener = null;\n    }\n  };\n\n  _proto.getCloseClickHandler = function getCloseClickHandler() {\n    var _this2 = this; // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n\n\n    return function (event) {\n      // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n      event.cancelBubble = true;\n\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      }\n      /**\r\n       * This event is fired when the InfoBox's close box is clicked.\r\n       * @name InfoBox#closeclick\r\n       * @event\r\n       */\n\n\n      google.maps.event.trigger(_this2, 'closeclick');\n\n      _this2.close();\n    };\n  };\n\n  _proto.panBox = function panBox(disablePan) {\n    if (this.div && !disablePan) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      var map = this.getMap(); // Only pan if attached to map, not panorama\n\n      if (map instanceof google.maps.Map) {\n        var xOffset = 0;\n        var yOffset = 0;\n        var bounds = map.getBounds();\n\n        if (bounds && !bounds.contains(this.position)) {\n          // Marker not in visible area of map, so set center\n          // of map to the marker position first.\n          map.setCenter(this.position);\n        }\n\n        var mapDiv = map.getDiv(); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        var mapWidth = mapDiv.offsetWidth; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        var mapHeight = mapDiv.offsetHeight;\n        var iwOffsetX = this.pixelOffset.width;\n        var iwOffsetY = this.pixelOffset.height;\n        var iwWidth = this.div.offsetWidth;\n        var iwHeight = this.div.offsetHeight;\n        var padX = this.infoBoxClearance.width;\n        var padY = this.infoBoxClearance.height; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        var projection = this.getProjection();\n        var pixPosition = projection.fromLatLngToContainerPixel(this.position);\n\n        if (pixPosition.x < -iwOffsetX + padX) {\n          xOffset = pixPosition.x + iwOffsetX - padX;\n        } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n          xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth;\n        }\n\n        if (this.alignBottom) {\n          if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n            yOffset = pixPosition.y + iwOffsetY - padY - iwHeight;\n          } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n            yOffset = pixPosition.y + iwOffsetY + padY - mapHeight;\n          }\n        } else {\n          if (pixPosition.y < -iwOffsetY + padY) {\n            yOffset = pixPosition.y + iwOffsetY - padY;\n          } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n            yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight;\n          }\n        }\n\n        if (!(xOffset === 0 && yOffset === 0)) {\n          // Move the map to the shifted center.\n          map.panBy(xOffset, yOffset);\n        }\n      }\n    }\n  };\n\n  _proto.setBoxStyle = function setBoxStyle() {\n    if (this.div) {\n      // Apply style values from the style sheet defined in the boxClass parameter:\n      this.div.className = this.boxClass; // Clear existing inline style values:\n\n      this.div.style.cssText = ''; // Apply style values defined in the boxStyle parameter:\n\n      var boxStyle = this.boxStyle;\n\n      for (var i in boxStyle) {\n        if (boxStyle.hasOwnProperty(i)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.div.style[i] = boxStyle[i];\n        }\n      } // Fix for iOS disappearing InfoBox problem\n      // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n\n\n      this.div.style.webkitTransform = 'translateZ(0)'; // Fix up opacity style for benefit of MSIE\n\n      if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n        // See http://www.quirksmode.org/css/opacity.html\n        var opacity = parseFloat(this.div.style.opacity || ''); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n\n        this.div.style.msFilter = '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"';\n        this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')';\n      } // Apply required styles\n\n\n      this.div.style.position = 'absolute';\n      this.div.style.visibility = 'hidden';\n\n      if (this.zIndex !== null) {\n        this.div.style.zIndex = this.zIndex + '';\n      }\n\n      if (!this.div.style.overflow) {\n        this.div.style.overflow = 'auto';\n      }\n    }\n  };\n\n  _proto.getBoxWidths = function getBoxWidths() {\n    var bw = {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    if (!this.div) {\n      return bw;\n    }\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      var ownerDocument = this.div.ownerDocument;\n      var computedStyle = ownerDocument && ownerDocument.defaultView ? ownerDocument.defaultView.getComputedStyle(this.div, '') : null;\n\n      if (computedStyle) {\n        // The computed styles are always in pixel units (good!)\n        bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0;\n        bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0;\n        bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0;\n        bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0;\n      }\n    } else if ( // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    document.documentElement.currentStyle // MSIE\n    ) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        var currentStyle = this.div.currentStyle;\n\n        if (currentStyle) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // The current styles may not be in pixel units, but assume they are (bad!)\n          bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0;\n          bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0;\n          bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0;\n          bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0;\n        }\n      }\n\n    return bw;\n  };\n\n  _proto.onRemove = function onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div);\n      this.div = null;\n    }\n  };\n\n  _proto.draw = function draw() {\n    this.createInfoBoxDiv();\n\n    if (this.div) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      var projection = this.getProjection();\n      var pixPosition = projection.fromLatLngToDivPixel(this.position);\n      this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px';\n\n      if (this.alignBottom) {\n        this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px';\n      } else {\n        this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px';\n      }\n\n      if (this.isHidden) {\n        this.div.style.visibility = 'hidden';\n      } else {\n        this.div.style.visibility = 'visible';\n      }\n    }\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.boxClass !== 'undefined') {\n      // Must be first\n      this.boxClass = options.boxClass;\n      this.setBoxStyle();\n    }\n\n    if (typeof options.boxStyle !== 'undefined') {\n      // Must be second\n      this.boxStyle = options.boxStyle;\n      this.setBoxStyle();\n    }\n\n    if (typeof options.content !== 'undefined') {\n      this.setContent(options.content);\n    }\n\n    if (typeof options.disableAutoPan !== 'undefined') {\n      this.disableAutoPan = options.disableAutoPan;\n    }\n\n    if (typeof options.maxWidth !== 'undefined') {\n      this.maxWidth = options.maxWidth;\n    }\n\n    if (typeof options.pixelOffset !== 'undefined') {\n      this.pixelOffset = options.pixelOffset;\n    }\n\n    if (typeof options.alignBottom !== 'undefined') {\n      this.alignBottom = options.alignBottom;\n    }\n\n    if (typeof options.position !== 'undefined') {\n      this.setPosition(options.position);\n    }\n\n    if (typeof options.zIndex !== 'undefined') {\n      this.setZIndex(options.zIndex);\n    }\n\n    if (typeof options.closeBoxMargin !== 'undefined') {\n      this.closeBoxMargin = options.closeBoxMargin;\n    }\n\n    if (typeof options.closeBoxURL !== 'undefined') {\n      this.closeBoxURL = options.closeBoxURL;\n    }\n\n    if (typeof options.infoBoxClearance !== 'undefined') {\n      this.infoBoxClearance = options.infoBoxClearance;\n    }\n\n    if (typeof options.isHidden !== 'undefined') {\n      this.isHidden = options.isHidden;\n    }\n\n    if (typeof options.visible !== 'undefined') {\n      this.isHidden = !options.visible;\n    }\n\n    if (typeof options.enableEventPropagation !== 'undefined') {\n      this.enableEventPropagation = options.enableEventPropagation;\n    }\n\n    if (this.div) {\n      this.draw();\n    }\n  };\n\n  _proto.setContent = function setContent(content) {\n    this.content = content;\n\n    if (this.div) {\n      if (this.closeListener) {\n        google.maps.event.removeListener(this.closeListener);\n        this.closeListener = null;\n      } // Odd code required to make things work with MSIE.\n\n\n      if (!this.fixedWidthSet) {\n        this.div.style.width = '';\n      }\n\n      if (typeof content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + content;\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg();\n        this.div.appendChild(content);\n      } // Perverse code required to make things work with MSIE.\n      // (Ensures the close box does, in fact, float to the right.)\n\n\n      if (!this.fixedWidthSet) {\n        this.div.style.width = this.div.offsetWidth + 'px';\n\n        if (typeof content === 'string') {\n          this.div.innerHTML = this.getCloseBoxImg() + content;\n        } else {\n          this.div.innerHTML = this.getCloseBoxImg();\n          this.div.appendChild(content);\n        }\n      }\n\n      this.addClickHandler();\n    }\n    /**\r\n     * This event is fired when the content of the InfoBox changes.\r\n     * @name InfoBox#content_changed\r\n     * @event\r\n     */\n\n\n    google.maps.event.trigger(this, 'content_changed');\n  };\n\n  _proto.setPosition = function setPosition(latLng) {\n    this.position = latLng;\n\n    if (this.div) {\n      this.draw();\n    }\n    /**\r\n     * This event is fired when the position of the InfoBox changes.\r\n     * @name InfoBox#position_changed\r\n     * @event\r\n     */\n\n\n    google.maps.event.trigger(this, 'position_changed');\n  };\n\n  _proto.setVisible = function setVisible(isVisible) {\n    this.isHidden = !isVisible;\n\n    if (this.div) {\n      this.div.style.visibility = this.isHidden ? 'hidden' : 'visible';\n    }\n  };\n\n  _proto.setZIndex = function setZIndex(index) {\n    this.zIndex = index;\n\n    if (this.div) {\n      this.div.style.zIndex = index + '';\n    }\n    /**\r\n     * This event is fired when the zIndex of the InfoBox changes.\r\n     * @name InfoBox#zindex_changed\r\n     * @event\r\n     */\n\n\n    google.maps.event.trigger(this, 'zindex_changed');\n  };\n\n  _proto.getContent = function getContent() {\n    return this.content;\n  };\n\n  _proto.getPosition = function getPosition() {\n    return this.position;\n  };\n\n  _proto.getZIndex = function getZIndex() {\n    return this.zIndex;\n  };\n\n  _proto.getVisible = function getVisible() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var map = this.getMap();\n    var isVisible;\n\n    if (typeof map === 'undefined' || map === null) {\n      isVisible = false;\n    } else {\n      isVisible = !this.isHidden;\n    }\n\n    return isVisible;\n  };\n\n  _proto.show = function show() {\n    this.isHidden = false;\n\n    if (this.div) {\n      this.div.style.visibility = 'visible';\n    }\n  };\n\n  _proto.hide = function hide() {\n    this.isHidden = true;\n\n    if (this.div) {\n      this.div.style.visibility = 'hidden';\n    }\n  };\n\n  _proto.open = function open(map, anchor) {\n    var _this3 = this;\n\n    if (anchor) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.position = anchor.getPosition();\n      this.moveListener = google.maps.event.addListener(anchor, 'position_changed', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      function () {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        var position = anchor.getPosition();\n\n        _this3.setPosition(position);\n      });\n      this.mapListener = google.maps.event.addListener(anchor, 'map_changed', // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      function () {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        _this3.setMap(anchor.map);\n      });\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.setMap(map);\n\n    if (this.div) {\n      this.panBox();\n    }\n  };\n\n  _proto.close = function close() {\n    if (this.closeListener) {\n      google.maps.event.removeListener(this.closeListener);\n      this.closeListener = null;\n    }\n\n    if (this.eventListeners) {\n      for (var i = 0; i < this.eventListeners.length; i++) {\n        google.maps.event.removeListener(this.eventListeners[i]);\n      }\n\n      this.eventListeners = null;\n    }\n\n    if (this.moveListener) {\n      google.maps.event.removeListener(this.moveListener);\n      this.moveListener = null;\n    }\n\n    if (this.mapListener) {\n      google.maps.event.removeListener(this.mapListener);\n      this.mapListener = null;\n    }\n\n    if (this.contextListener) {\n      google.maps.event.removeListener(this.contextListener);\n      this.contextListener = null;\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    this.setMap(null);\n  };\n\n  _proto.extend = function extend(obj1, obj2) {\n    return function applyExtend(object) {\n      // eslint-disable-next-line guard-for-in\n      for (var property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (!this.prototype.hasOwnProperty(property)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.prototype[property] = object.prototype[property];\n        }\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n\n      return this;\n    }.apply(obj1, [obj2]);\n  };\n\n  return InfoBox;\n}();\n\nexport { InfoBox };","map":{"version":3,"sources":["../src/InfoBox.tsx"],"names":["InfoBox","options","google","createInfoBoxDiv","event","ignoreHandler","cancelHandler","document","panes","bw","events","i","getCloseBoxImg","img","addClickHandler","closeBox","getCloseClickHandler","panBox","map","xOffset","yOffset","bounds","mapDiv","mapWidth","mapHeight","iwOffsetX","iwOffsetY","iwWidth","iwHeight","padX","padY","projection","pixPosition","setBoxStyle","boxStyle","opacity","parseFloat","getBoxWidths","top","bottom","left","right","ownerDocument","computedStyle","parseInt","currentStyle","onRemove","draw","setOptions","setContent","setPosition","setVisible","setZIndex","index","getContent","getPosition","getZIndex","getVisible","isVisible","show","hide","open","anchor","position","close","extend","object"],"mappings":"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","sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { InfoBoxOptions } from './types'\n\nexport class InfoBox {\n  content: string | Node\n  disableAutoPan: boolean\n  maxWidth: number\n  pixelOffset: google.maps.Size\n  position: google.maps.LatLng\n  zIndex: number | undefined | null\n  boxClass: string\n  boxStyle: {\n    [key: string]: any\n  }\n  closeBoxMargin: string\n  closeBoxURL: string\n  infoBoxClearance: google.maps.Size\n  isHidden: boolean\n  alignBottom: boolean\n  pane: string\n  enableEventPropagation: boolean\n  div: HTMLDivElement | null\n  closeListener: google.maps.MapsEventListener | null\n  moveListener: google.maps.MapsEventListener | null\n  mapListener: google.maps.MapsEventListener | null\n  contextListener: google.maps.MapsEventListener | null\n  eventListeners: google.maps.MapsEventListener[] | null\n  fixedWidthSet: boolean | null\n\n  constructor(options: InfoBoxOptions = {}) {\n    this.extend(InfoBox, google.maps.OverlayView)\n\n    // Standard options (in common with google.maps.InfoWindow):\n    this.content = options.content || ''\n    this.disableAutoPan = options.disableAutoPan || false\n    this.maxWidth = options.maxWidth || 0\n    this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0)\n    this.position = options.position || new google.maps.LatLng(0, 0)\n    this.zIndex = options.zIndex || null\n\n    // Additional options (unique to InfoBox):\n    this.boxClass = options.boxClass || 'infoBox'\n    this.boxStyle = options.boxStyle || {}\n    this.closeBoxMargin = options.closeBoxMargin || '2px'\n    this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif'\n    if (options.closeBoxURL === '') {\n      this.closeBoxURL = ''\n    }\n    this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1)\n\n    if (typeof options.visible === 'undefined') {\n      if (typeof options.isHidden === 'undefined') {\n        options.visible = true\n      } else {\n        options.visible = !options.isHidden\n      }\n    }\n    this.isHidden = !options.visible\n\n    this.alignBottom = options.alignBottom || false\n    this.pane = options.pane || 'floatPane'\n    this.enableEventPropagation = options.enableEventPropagation || false\n\n    this.div = null\n    this.closeListener = null\n    this.moveListener = null\n    this.mapListener = null\n    this.contextListener = null\n    this.eventListeners = null\n    this.fixedWidthSet = null\n  }\n\n  createInfoBoxDiv(): void {\n    // This handler prevents an event in the InfoBox from being passed on to the map.\n    function cancelHandler(event: Event) {\n      event.cancelBubble = true\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n    }\n\n    // This handler ignores the current event in the InfoBox and conditionally prevents\n    // the event from being passed on to the map. It is used for the contextmenu event.\n    // eslint-disable-next-line  @getify/proper-arrows/this\n    const ignoreHandler = (event: Event) => {\n      event.returnValue = false\n\n      if (event.preventDefault) {\n        event.preventDefault()\n      }\n\n      if (!this.enableEventPropagation) {\n        cancelHandler(event)\n      }\n    }\n\n    if (!this.div) {\n      this.div = document.createElement('div')\n      this.setBoxStyle()\n\n      if (typeof this.content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + this.content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(this.content)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const panes = this.getPanes()\n      panes[this.pane].appendChild(this.div) // Add the InfoBox div to the DOM\n\n      this.addClickHandler()\n\n      if (this.div.style.width) {\n        this.fixedWidthSet = true\n      } else {\n        if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n          this.div.style.width = this.maxWidth + 'px'\n          this.fixedWidthSet = true\n        } else {\n          // The following code is needed to overcome problems with MSIE\n          const bw = this.getBoxWidths()\n          this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px'\n          this.fixedWidthSet = false\n        }\n      }\n\n      this.panBox(this.disableAutoPan)\n\n      if (!this.enableEventPropagation) {\n        this.eventListeners = []\n\n        // Cancel event propagation.\n        // Note: mousemove not included (to resolve Issue 152)\n        const events = [\n          'mousedown',\n          'mouseover',\n          'mouseout',\n          'mouseup',\n          'click',\n          'dblclick',\n          'touchstart',\n          'touchend',\n          'touchmove',\n        ]\n\n        for (let i = 0; i < events.length; i++) {\n          this.eventListeners.push(\n            google.maps.event.addDomListener(this.div, events[i], cancelHandler)\n          )\n        }\n\n        // Workaround for Google bug that causes the cursor to change to a pointer\n        // when the mouse moves over a marker underneath InfoBox.\n        this.eventListeners.push(\n          google.maps.event.addDomListener(\n            this.div,\n            'mouseover',\n            // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n            () => {\n              if (this.div) {\n                this.div.style.cursor = 'default'\n              }\n            }\n          )\n        )\n      }\n\n      this.contextListener = google.maps.event.addDomListener(\n        this.div,\n        'contextmenu',\n        ignoreHandler\n      )\n\n      /**\n       * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n       * @name InfoBox#domready\n       * @event\n       */\n      google.maps.event.trigger(this, 'domready')\n    }\n  }\n\n  getCloseBoxImg(): string {\n    let img = ''\n\n    if (this.closeBoxURL !== '') {\n      img = '<img'\n      img += \" src='\" + this.closeBoxURL + \"'\"\n      img += ' align=right' // Do this because Opera chokes on style='float: right;'\n      img += \" style='\"\n      img += ' position: relative;' // Required by MSIE\n      img += ' cursor: pointer;'\n      img += ' margin: ' + this.closeBoxMargin + ';'\n      img += \"'>\"\n    }\n\n    return img\n  }\n\n  addClickHandler(): void {\n    if (this.div && this.div.firstChild && this.closeBoxURL !== '') {\n      const closeBox = this.div.firstChild\n      this.closeListener = google.maps.event.addDomListener(\n        closeBox,\n        'click',\n        this.getCloseClickHandler()\n      )\n    } else {\n      this.closeListener = null\n    }\n  }\n\n  getCloseClickHandler() {\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    return (event: Event) => {\n      // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n      event.cancelBubble = true\n\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n\n      /**\n       * This event is fired when the InfoBox's close box is clicked.\n       * @name InfoBox#closeclick\n       * @event\n       */\n      google.maps.event.trigger(this, 'closeclick')\n\n      this.close()\n    }\n  }\n\n  panBox(disablePan?: boolean): void {\n    if (this.div && !disablePan) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n\n      // Only pan if attached to map, not panorama\n      if (map instanceof google.maps.Map) {\n        let xOffset = 0\n        let yOffset = 0\n\n        const bounds = map.getBounds()\n        if (bounds && !bounds.contains(this.position)) {\n          // Marker not in visible area of map, so set center\n          // of map to the marker position first.\n          map.setCenter(this.position)\n        }\n\n        const mapDiv = map.getDiv()\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const mapWidth = mapDiv.offsetWidth\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const mapHeight = mapDiv.offsetHeight\n        const iwOffsetX = this.pixelOffset.width\n        const iwOffsetY = this.pixelOffset.height\n        const iwWidth = this.div.offsetWidth\n        const iwHeight = this.div.offsetHeight\n        const padX = this.infoBoxClearance.width\n        const padY = this.infoBoxClearance.height\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        const projection: google.maps.MapCanvasProjection = this.getProjection()\n        const pixPosition = projection.fromLatLngToContainerPixel(this.position)\n\n        if (pixPosition.x < -iwOffsetX + padX) {\n          xOffset = pixPosition.x + iwOffsetX - padX\n        } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n          xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth\n        }\n        if (this.alignBottom) {\n          if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n            yOffset = pixPosition.y + iwOffsetY - padY - iwHeight\n          } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n            yOffset = pixPosition.y + iwOffsetY + padY - mapHeight\n          }\n        } else {\n          if (pixPosition.y < -iwOffsetY + padY) {\n            yOffset = pixPosition.y + iwOffsetY - padY\n          } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n            yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight\n          }\n        }\n\n        if (!(xOffset === 0 && yOffset === 0)) {\n          // Move the map to the shifted center.\n          map.panBy(xOffset, yOffset)\n        }\n      }\n    }\n  }\n\n  setBoxStyle(): void {\n    if (this.div) {\n      // Apply style values from the style sheet defined in the boxClass parameter:\n      this.div.className = this.boxClass\n\n      // Clear existing inline style values:\n      this.div.style.cssText = ''\n\n      // Apply style values defined in the boxStyle parameter:\n      const boxStyle = this.boxStyle\n      for (const i in boxStyle) {\n        if (boxStyle.hasOwnProperty(i)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.div.style[i] = boxStyle[i]\n        }\n      }\n\n      // Fix for iOS disappearing InfoBox problem\n      // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n      this.div.style.webkitTransform = 'translateZ(0)'\n\n      // Fix up opacity style for benefit of MSIE\n      if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n        // See http://www.quirksmode.org/css/opacity.html\n        const opacity = parseFloat(this.div.style.opacity || '')\n\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.div.style.msFilter =\n          '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"'\n        this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')'\n      }\n\n      // Apply required styles\n      this.div.style.position = 'absolute'\n      this.div.style.visibility = 'hidden'\n      if (this.zIndex !== null) {\n        this.div.style.zIndex = this.zIndex + ''\n      }\n      if (!this.div.style.overflow) {\n        this.div.style.overflow = 'auto'\n      }\n    }\n  }\n\n  getBoxWidths(): { bottom: number; left: number; right: number; top: number } {\n    const bw = { top: 0, bottom: 0, left: 0, right: 0 }\n\n    if (!this.div) {\n      return bw\n    }\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      const ownerDocument = this.div.ownerDocument\n      const computedStyle =\n        ownerDocument && ownerDocument.defaultView\n          ? ownerDocument.defaultView.getComputedStyle(this.div, '')\n          : null\n\n      if (computedStyle) {\n        // The computed styles are always in pixel units (good!)\n        bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0\n      }\n    } else if (\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      document.documentElement.currentStyle // MSIE\n    ) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const currentStyle = this.div.currentStyle\n\n      if (currentStyle) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // The current styles may not be in pixel units, but assume they are (bad!)\n        bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0\n      }\n    }\n\n    return bw\n  }\n\n  onRemove(): void {\n    if (this.div && this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div)\n      this.div = null\n    }\n  }\n\n  draw(): void {\n    this.createInfoBoxDiv()\n\n    if (this.div) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      const projection: google.maps.MapCanvasProjection = this.getProjection()\n      const pixPosition = projection.fromLatLngToDivPixel(this.position)\n\n      this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px'\n\n      if (this.alignBottom) {\n        this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px'\n      } else {\n        this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px'\n      }\n\n      if (this.isHidden) {\n        this.div.style.visibility = 'hidden'\n      } else {\n        this.div.style.visibility = 'visible'\n      }\n    }\n  }\n\n  setOptions(options: InfoBoxOptions = {}): void {\n    if (typeof options.boxClass !== 'undefined') {\n      // Must be first\n      this.boxClass = options.boxClass\n      this.setBoxStyle()\n    }\n    if (typeof options.boxStyle !== 'undefined') {\n      // Must be second\n      this.boxStyle = options.boxStyle\n      this.setBoxStyle()\n    }\n    if (typeof options.content !== 'undefined') {\n      this.setContent(options.content)\n    }\n    if (typeof options.disableAutoPan !== 'undefined') {\n      this.disableAutoPan = options.disableAutoPan\n    }\n    if (typeof options.maxWidth !== 'undefined') {\n      this.maxWidth = options.maxWidth\n    }\n    if (typeof options.pixelOffset !== 'undefined') {\n      this.pixelOffset = options.pixelOffset\n    }\n    if (typeof options.alignBottom !== 'undefined') {\n      this.alignBottom = options.alignBottom\n    }\n    if (typeof options.position !== 'undefined') {\n      this.setPosition(options.position)\n    }\n    if (typeof options.zIndex !== 'undefined') {\n      this.setZIndex(options.zIndex)\n    }\n    if (typeof options.closeBoxMargin !== 'undefined') {\n      this.closeBoxMargin = options.closeBoxMargin\n    }\n    if (typeof options.closeBoxURL !== 'undefined') {\n      this.closeBoxURL = options.closeBoxURL\n    }\n    if (typeof options.infoBoxClearance !== 'undefined') {\n      this.infoBoxClearance = options.infoBoxClearance\n    }\n    if (typeof options.isHidden !== 'undefined') {\n      this.isHidden = options.isHidden\n    }\n    if (typeof options.visible !== 'undefined') {\n      this.isHidden = !options.visible\n    }\n    if (typeof options.enableEventPropagation !== 'undefined') {\n      this.enableEventPropagation = options.enableEventPropagation\n    }\n\n    if (this.div) {\n      this.draw()\n    }\n  }\n\n  setContent(content: string | Node): void {\n    this.content = content\n\n    if (this.div) {\n      if (this.closeListener) {\n        google.maps.event.removeListener(this.closeListener)\n        this.closeListener = null\n      }\n\n      // Odd code required to make things work with MSIE.\n      if (!this.fixedWidthSet) {\n        this.div.style.width = ''\n      }\n\n      if (typeof content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(content)\n      }\n\n      // Perverse code required to make things work with MSIE.\n      // (Ensures the close box does, in fact, float to the right.)\n      if (!this.fixedWidthSet) {\n        this.div.style.width = this.div.offsetWidth + 'px'\n        if (typeof content === 'string') {\n          this.div.innerHTML = this.getCloseBoxImg() + content\n        } else {\n          this.div.innerHTML = this.getCloseBoxImg()\n          this.div.appendChild(content)\n        }\n      }\n\n      this.addClickHandler()\n    }\n\n    /**\n     * This event is fired when the content of the InfoBox changes.\n     * @name InfoBox#content_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'content_changed')\n  }\n\n  setPosition(latLng: google.maps.LatLng): void {\n    this.position = latLng\n\n    if (this.div) {\n      this.draw()\n    }\n\n    /**\n     * This event is fired when the position of the InfoBox changes.\n     * @name InfoBox#position_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'position_changed')\n  }\n\n  setVisible(isVisible: boolean): void {\n    this.isHidden = !isVisible\n    if (this.div) {\n      this.div.style.visibility = this.isHidden ? 'hidden' : 'visible'\n    }\n  }\n\n  setZIndex(index: number): void {\n    this.zIndex = index\n\n    if (this.div) {\n      this.div.style.zIndex = index + ''\n    }\n\n    /**\n     * This event is fired when the zIndex of the InfoBox changes.\n     * @name InfoBox#zindex_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'zindex_changed')\n  }\n\n  getContent(): string | Node {\n    return this.content\n  }\n\n  getPosition(): google.maps.LatLng {\n    return this.position\n  }\n\n  getZIndex(): number | null | undefined {\n    return this.zIndex\n  }\n\n  getVisible(): boolean {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n    let isVisible\n\n    if (typeof map === 'undefined' || map === null) {\n      isVisible = false\n    } else {\n      isVisible = !this.isHidden\n    }\n\n    return isVisible\n  }\n\n  show(): void {\n    this.isHidden = false\n    if (this.div) {\n      this.div.style.visibility = 'visible'\n    }\n  }\n\n  hide(): void {\n    this.isHidden = true\n    if (this.div) {\n      this.div.style.visibility = 'hidden'\n    }\n  }\n\n  open(\n    map: google.maps.Map | google.maps.StreetViewPanorama,\n    anchor?: google.maps.MVCObject\n  ): void {\n    if (anchor) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.position = anchor.getPosition()\n      this.moveListener = google.maps.event.addListener(\n        anchor,\n        'position_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          const position = anchor.getPosition()\n          this.setPosition(position)\n        }\n      )\n\n      this.mapListener = google.maps.event.addListener(\n        anchor,\n        'map_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.setMap(anchor.map)\n        }\n      )\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(map)\n\n    if (this.div) {\n      this.panBox()\n    }\n  }\n\n  close() {\n    if (this.closeListener) {\n      google.maps.event.removeListener(this.closeListener)\n      this.closeListener = null\n    }\n\n    if (this.eventListeners) {\n      for (let i = 0; i < this.eventListeners.length; i++) {\n        google.maps.event.removeListener(this.eventListeners[i])\n      }\n      this.eventListeners = null\n    }\n\n    if (this.moveListener) {\n      google.maps.event.removeListener(this.moveListener)\n      this.moveListener = null\n    }\n\n    if (this.mapListener) {\n      google.maps.event.removeListener(this.mapListener)\n      this.mapListener = null\n    }\n\n    if (this.contextListener) {\n      google.maps.event.removeListener(this.contextListener)\n      this.contextListener = null\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(null)\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (const property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (!this.prototype.hasOwnProperty(property)) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n          this.prototype[property] = object.prototype[property]\n        }\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n"]},"metadata":{},"sourceType":"module"}