{"ast":null,"code":"var has = require('../internals/has');\n\nvar toIndexedObject = require('../internals/to-indexed-object');\n\nvar indexOf = require('../internals/array-includes').indexOf;\n\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key); // Don't enum bug & hidden keys\n\n\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/workspace/covexit/frontend/node_modules/core-js-pure/internals/object-keys-internal.js"],"names":["has","require","toIndexedObject","indexOf","hiddenKeys","module","exports","object","names","O","i","result","key","push","length"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAjB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,gCAAD,CAA7B;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,6BAAD,CAAP,CAAuCE,OAArD;;AACA,IAAIC,UAAU,GAAGH,OAAO,CAAC,0BAAD,CAAxB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACxC,MAAIC,CAAC,GAAGP,eAAe,CAACK,MAAD,CAAvB;AACA,MAAIG,CAAC,GAAG,CAAR;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,GAAJ;;AACA,OAAKA,GAAL,IAAYH,CAAZ,EAAe,CAACT,GAAG,CAACI,UAAD,EAAaQ,GAAb,CAAJ,IAAyBZ,GAAG,CAACS,CAAD,EAAIG,GAAJ,CAA5B,IAAwCD,MAAM,CAACE,IAAP,CAAYD,GAAZ,CAAxC,CALyB,CAMxC;;;AACA,SAAOJ,KAAK,CAACM,MAAN,GAAeJ,CAAtB,EAAyB,IAAIV,GAAG,CAACS,CAAD,EAAIG,GAAG,GAAGJ,KAAK,CAACE,CAAC,EAAF,CAAf,CAAP,EAA8B;AACrD,KAACP,OAAO,CAACQ,MAAD,EAASC,GAAT,CAAR,IAAyBD,MAAM,CAACE,IAAP,CAAYD,GAAZ,CAAzB;AACD;;AACD,SAAOD,MAAP;AACD,CAXD","sourcesContent":["var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n"]},"metadata":{},"sourceType":"script"}