{"ast":null,"code":"var _jsxFileName = \"/workspace/covexit/frontend/src/components/Share/Share.js\";\nimport React, { useRef, useState } from 'react';\nimport './Share.scss';\nimport share from \"../../assets/share.svg\";\nexport default function Share() {\n  const [show, setShow] = useState(false);\n  const [copySuccess, setCopySuccess] = useState('');\n  const url = useRef(this.window);\n\n  function copyLink(e) {\n    urlRef.current.select();\n    document.execCommand('copy'); // This is just personal preference.\n    // I prefer to not show the the whole text area selected.\n\n    e.target.focus();\n    setCopySuccess('Copied!');\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Share\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Share-toggle\",\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: share,\n    alt: \"Share Icon\",\n    className: \"Share-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), \"Share\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Share-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  },\n  /* Logical shortcut for only displaying the\n     button if the copy command exists */\n  document.queryCommandSupported('copy') && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: copyLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Copy Link\"), copySuccess), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: urlRef,\n    heading: \"Share Covexit and help others during this crisis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/workspace/covexit/frontend/src/components/Share/Share.js"],"names":["React","useRef","useState","Share","show","setShow","copySuccess","setCopySuccess","url","window","copyLink","e","urlRef","current","select","document","execCommand","target","focus","share","queryCommandSupported"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAsBC,QAAtB,QAAqC,OAArC;AACA,OAAO,cAAP;;AAIA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBH,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMM,GAAG,GAAGP,MAAM,CAAC,KAAKQ,MAAN,CAAlB;;AAGA,WAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACnBC,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf;AACAC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB,EAFmB,CAGnB;AACA;;AACAL,IAAAA,CAAC,CAACM,MAAF,CAASC,KAAT;AACAX,IAAAA,cAAc,CAAC,SAAD,CAAd;AACD;;AAAA;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAE,MAAMF,OAAO,CAAC,CAACD,IAAF,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEe,KAAV;AAAiB,IAAA,GAAG,EAAC,YAArB;AAAkC,IAAA,SAAS,EAAC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,UADF,eAOA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGG;;AAEAJ,EAAAA,QAAQ,CAACK,qBAAT,CAA+B,MAA/B,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEV,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGJ,WAFH,CANJ,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEM,MADP;AAEE,IAAA,OAAO,EAAC,kDAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CAPA,CADF;AA4BD","sourcesContent":["import React, {useRef,useState} from 'react';\nimport './Share.scss';\nimport share from \"../../assets/share.svg\";\n\n\nexport default function Share() {\n  const [show, setShow]= useState(false);\n  const [copySuccess, setCopySuccess] = useState('');\n  const url = useRef(this.window);\n\n\n  function copyLink(e) {\n    urlRef.current.select();\n    document.execCommand('copy');\n    // This is just personal preference.\n    // I prefer to not show the the whole text area selected.\n    e.target.focus();\n    setCopySuccess('Copied!');\n  };\n  return (\n    <div className=\"Share\">\n      <button className=\"Share-toggle\" onClick={() => setShow(!show)}>\n        <img src={share} alt=\"Share Icon\" className=\"Share-icon\"/>\n\n        Share\n      </button>\n\n    <div className=\"Share-body\">\n\n      {\n       /* Logical shortcut for only displaying the\n          button if the copy command exists */\n       document.queryCommandSupported('copy') &&\n        <div>\n          <button onClick={copyLink}>Copy Link</button>\n          {copySuccess}\n        </div>\n      }\n      <form>\n        <textarea\n          ref={urlRef}\n          heading='Share Covexit and help others during this crisis'\n        />\n      </form>\n    </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}