{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isScope;\n\nvar _generated = require(\"./generated\");\n\nfunction isScope(node, parent) {\n  if ((0, _generated.isBlockStatement)(node) && (0, _generated.isFunction)(parent, {\n    body: node\n  })) {\n    return false;\n  }\n\n  if ((0, _generated.isBlockStatement)(node) && (0, _generated.isCatchClause)(parent, {\n    body: node\n  })) {\n    return false;\n  }\n\n  if ((0, _generated.isPattern)(node) && (0, _generated.isFunction)(parent)) {\n    return true;\n  }\n\n  return (0, _generated.isScopable)(node);\n}","map":{"version":3,"sources":["/workspace/covexit/frontend/node_modules/@babel/types/lib/validators/isScope.js"],"names":["Object","defineProperty","exports","value","default","isScope","_generated","require","node","parent","isBlockStatement","isFunction","body","isCatchClause","isPattern","isScopable"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,OAAlB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AAEA,SAASF,OAAT,CAAiBG,IAAjB,EAAuBC,MAAvB,EAA+B;AAC7B,MAAI,CAAC,GAAGH,UAAU,CAACI,gBAAf,EAAiCF,IAAjC,KAA0C,CAAC,GAAGF,UAAU,CAACK,UAAf,EAA2BF,MAA3B,EAAmC;AAC/EG,IAAAA,IAAI,EAAEJ;AADyE,GAAnC,CAA9C,EAEI;AACF,WAAO,KAAP;AACD;;AAED,MAAI,CAAC,GAAGF,UAAU,CAACI,gBAAf,EAAiCF,IAAjC,KAA0C,CAAC,GAAGF,UAAU,CAACO,aAAf,EAA8BJ,MAA9B,EAAsC;AAClFG,IAAAA,IAAI,EAAEJ;AAD4E,GAAtC,CAA9C,EAEI;AACF,WAAO,KAAP;AACD;;AAED,MAAI,CAAC,GAAGF,UAAU,CAACQ,SAAf,EAA0BN,IAA1B,KAAmC,CAAC,GAAGF,UAAU,CAACK,UAAf,EAA2BF,MAA3B,CAAvC,EAA2E;AACzE,WAAO,IAAP;AACD;;AAED,SAAO,CAAC,GAAGH,UAAU,CAACS,UAAf,EAA2BP,IAA3B,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isScope;\n\nvar _generated = require(\"./generated\");\n\nfunction isScope(node, parent) {\n  if ((0, _generated.isBlockStatement)(node) && (0, _generated.isFunction)(parent, {\n    body: node\n  })) {\n    return false;\n  }\n\n  if ((0, _generated.isBlockStatement)(node) && (0, _generated.isCatchClause)(parent, {\n    body: node\n  })) {\n    return false;\n  }\n\n  if ((0, _generated.isPattern)(node) && (0, _generated.isFunction)(parent)) {\n    return true;\n  }\n\n  return (0, _generated.isScopable)(node);\n}"]},"metadata":{},"sourceType":"script"}