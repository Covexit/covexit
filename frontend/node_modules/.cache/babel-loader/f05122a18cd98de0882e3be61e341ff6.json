{"ast":null,"code":"var _jsxFileName = \"/workspace/covexit/frontend/src/components/Share/Share.js\";\nimport React, { useRef, useState, Component } from 'react';\nimport Modal from \"../Modal/Modal\";\nimport './Share.scss';\nimport share from \"../../assets/share.svg\";\n\nfunction copyToClipboard() {\n  const [copySuccess, setCopySuccess] = useState('');\n  const urlRef = useRef(null);\n  urlRef.current.select();\n  document.execCommand('copy');\n  return setCopySuccess('Copied!');\n}\n\n;\nexport default class Share extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        show: !this.state.show\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Share\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Share-toggle\",\n      onClick: () => {\n        this.showModal();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"  \", /*#__PURE__*/React.createElement(\"img\", {\n      src: share,\n      alt: \"Share Icon\",\n      className: \"Share-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }), \" \", \"Share\", \" \"), /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.showModal,\n      show: this.state.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"urlRef\", {\n      ref: urlRef,\n      value: \"www.covexit.de\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }), document.queryCommandSupported('copy') && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: copyToClipboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Copy Link\"), copySuccess)));\n  }\n\n}","map":{"version":3,"sources":["/workspace/covexit/frontend/src/components/Share/Share.js"],"names":["React","useRef","useState","Component","Modal","copyToClipboard","copySuccess","setCopySuccess","urlRef","current","select","document","execCommand","Share","state","show","showModal","setState","render","share","queryCommandSupported"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,cAAP;;;AAMA,SAASC,eAAT,GAA2B;AAEvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMM,MAAM,GAAGP,MAAM,CAAC,IAAD,CAArB;AACAO,EAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf;AACAC,EAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AACD,SACCL,cAAc,CAAC,SAAD,CADf;AAEA;;AAAA;AAEF,eAAe,MAAMM,KAAN,SAAoBV,SAApB,CAA6B;AAAA;AAAA;AAAA,SACzCW,KADyC,GACjC;AACRC,MAAAA,IAAI,EAAE;AADE,KADiC;;AAAA,SAI3CC,SAJ2C,GAI/B,MAAM;AAChB,WAAKC,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADN,OAAd;AAGD,KAR0C;AAAA;;AAS3CG,EAAAA,MAAM,GAAG;AACP,wBAEA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,MAAM;AAC5C,aAAKF,SAAL;AACD,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAGG;AAAK,MAAA,GAAG,EAAEG,KAAV;AAAiB,MAAA,GAAG,EAAC,YAArB;AAAkC,MAAA,SAAS,EAAC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,EAIG,GAJH,WAKQ,GALR,CADJ,eASA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKH,SAArB;AAAgC,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACE,MAAA,GAAG,EAAEP,MADP;AAEE,MAAA,KAAK,EAAC,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMGG,QAAQ,CAACS,qBAAT,CAA+B,MAA/B,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAEf,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGC,WAFH,CAPJ,CATA,CAFA;AA0BH;;AApC4C","sourcesContent":["import React, { useRef, useState, Component } from 'react';\nimport Modal from \"../Modal/Modal\";\nimport './Share.scss';\nimport share from \"../../assets/share.svg\";\n\n\n\n\nfunction copyToClipboard() {\n\n    const [copySuccess, setCopySuccess] = useState('');\n    const urlRef = useRef(null);\n    urlRef.current.select();\n    document.execCommand('copy');\n   return(\n    setCopySuccess('Copied!'))\n  };\n\n export default class Share extends Component{\n    state = {\n    show: false\n  };\n  showModal = () => {\n    this.setState({\n      show: !this.state.show\n   });\n  }\n  render() {\n    return (\n\n    <div className=\"Share\">\n        <button className=\"Share-toggle\" onClick={() => {\n            this.showModal();\n          }}\n        >  <img src={share} alt=\"Share Icon\" className=\"Share-icon\" />\n          {\" \"}\n          Share{\" \"}\n        </button>\n\n    <Modal onClose={this.showModal} show={this.state.show}>\n        <urlRef\n          ref={urlRef}\n          value='www.covexit.de'\n        />\n             {\n       document.queryCommandSupported('copy') &&\n        <div>\n          <button onClick={copyToClipboard}>Copy Link</button>\n          {copySuccess}\n        </div>\n             }\n    </Modal>\n</div>\n  );\n}\n  }\n\n"]},"metadata":{},"sourceType":"module"}