{"ast":null,"code":"var _jsxFileName = \"/workspace/covexit/frontend/src/components/Share/Share.js\";\nimport React, { useRef, useState } from 'react';\nimport Modal from \"../Modal/Modal\";\nimport './Share.scss';\nimport share from \"../../assets/share.svg\";\n\nclass Share extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.copyCodeToClipboard = () => {\n      document.execCommand(\"copy\");\n      this.setState({\n        copySuccess: true\n      });\n    };\n\n    this.state = {\n      copySuccess: false\n    };\n  }\n\n  handleCopy(e) {\n    e.preventDefault();\n    e.clipboardData.setData(\"www.covexit.de\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Share-toggle\",\n      onClick: () => setModalShow(!modalShow),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"  \", /*#__PURE__*/React.createElement(\"img\", {\n      src: share,\n      alt: \"Share Icon\",\n      className: \"Share-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }), \" \", \"Share\", \" \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: \"www.covexit.de\",\n      onCopy: this.handleCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.copyCodeToClipboard(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }\n    }, \"Copy Link\"), this.state.copySuccess ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"color\": \"green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Success!\") : null, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Skip\"));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Share, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 17\n  }\n}), document.getElementById('modal'));","map":{"version":3,"sources":["/workspace/covexit/frontend/src/components/Share/Share.js"],"names":["React","useRef","useState","Modal","Share","Component","constructor","props","copyCodeToClipboard","document","execCommand","setState","copySuccess","state","handleCopy","e","preventDefault","clipboardData","setData","render","setModalShow","modalShow","share","ReactDOM","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,cAAP;;;AAIA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;;AADmB,SAQpBC,mBARoB,GAQE,MAAM;AAC3BC,MAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAd;AACD,KAXoB;;AAGnB,SAAKC,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAODE,EAAAA,UAAU,CAAEC,CAAF,EAAK;AACbA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,aAAF,CAAgBC,OAAhB,CAAwB,gBAAxB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,CAACC,SAAF,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACG;AAAK,MAAA,GAAG,EAAEC,KAAV;AAAiB,MAAA,GAAG,EAAC,YAArB;AAAkC,MAAA,SAAS,EAAC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,GAFH,WAGQ,GAHR,CADJ,eAOI;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,YAAY,EAAC,gBAFf;AAGE,MAAA,MAAM,EAAE,KAAKR,UAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAcD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKN,mBAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAdC,EAkBQ,KAAKK,KAAL,CAAWD,WAAX,gBACA;AAAK,MAAA,KAAK,EAAE;AAAC,iBAAS;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,GAGS,IArBjB,eAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ,CADA;AA2BD;;AA/CiC;;AAkDpCW,QAAQ,CAACJ,MAAT,eAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BV,QAAQ,CAACe,cAAT,CAAwB,OAAxB,CAA3B","sourcesContent":["import React, { useRef, useState } from 'react';\nimport Modal from \"../Modal/Modal\";\nimport './Share.scss';\nimport share from \"../../assets/share.svg\";\n\n\nclass Share extends React.Component {\n    constructor(props) {\n    super(props)\n\n    this.state = {\n      copySuccess: false\n    }\n  }\n\n   copyCodeToClipboard = () => {\n    document.execCommand(\"copy\")\n    this.setState({copySuccess: true})\n  }\n\n  handleCopy (e) {\n    e.preventDefault();\n    e.clipboardData.setData(\"www.covexit.de\");\n  }\n\n  render() {\n    return (\n    <div id=\"modal\">\n        <button className=\"Share-toggle\" onClick={() => setModalShow(!modalShow)}\n        >  <img src={share} alt=\"Share Icon\" className=\"Share-icon\" />\n          {\" \"}\n          Share{\" \"}\n        </button>\n\n        <input\n          type=\"text\"\n          defaultValue=\"www.covexit.de\"\n          onCopy={this.handleCopy}\n        />\n\n\n   <button onClick={() => this.copyCodeToClipboard()}>\n            Copy Link\n          </button>\n          {\n            this.state.copySuccess ?\n            <div style={{\"color\": \"green\"}}>\n              Success!\n            </div> : null\n          }\n        <button>Skip</button>\n        </div>\n     );\n  }\n}\n\nReactDOM.render(<Share />, document.getElementById('modal'));\n"]},"metadata":{},"sourceType":"module"}