{"ast":null,"code":"var _jsxFileName = \"/workspace/covexit/frontend/src/components/Fields/Fields.js\";\nimport React, { useState } from 'react';\nimport './Fields.scss';\nimport Button from \"../Button/Button\";\n\nconst TextInput = ({\n  onKeyDown,\n  placeholder,\n  type,\n  onChange,\n  onFocus,\n  onBlur,\n  name,\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TextInput\",\n    onKeyDown: onKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TextInput-label-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, placeholder), /*#__PURE__*/React.createElement(\"input\", {\n    type: type || 'text',\n    className: \"TextInput-field\",\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    name: name,\n    value: value,\n    placeholder: placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst TextArea = ({\n  onKeyDown,\n  placeholder,\n  rows,\n  onChange,\n  onFocus,\n  onBlur,\n  name,\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TextArea\",\n    onKeyDown: onKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TextInput-label-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, placeholder), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"TextInput-field\",\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    name: name,\n    rows: rows || 3,\n    value: value,\n    placeholder: placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst FileUpload = ({\n  helpText,\n  label,\n  onChange,\n  name,\n  value\n}) => {\n  const [img, setImg] = useState();\n  const file = value && value[0];\n\n  if (file) {\n    const reader = new FileReader();\n\n    reader.onload = reader => setImg(reader.target.result);\n\n    reader.readAsDataURL(file);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FileUpload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, img && file && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FileUpload-preview TextInput-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: img,\n    alt: file.name,\n    className: \"FileUpload-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, file.name)), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    label: label,\n    span: true,\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TextInput-helpText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, helpText), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"FileUpload-field\",\n    onChange: onChange,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default {\n  TextInput,\n  TextArea,\n  FileUpload\n};","map":{"version":3,"sources":["/workspace/covexit/frontend/src/components/Fields/Fields.js"],"names":["React","useState","Button","TextInput","onKeyDown","placeholder","type","onChange","onFocus","onBlur","name","value","TextArea","rows","FileUpload","helpText","label","img","setImg","file","reader","FileReader","onload","target","result","readAsDataURL"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport './Fields.scss';\nimport Button from \"../Button/Button\";\n\n\nconst TextInput = ({ onKeyDown, placeholder, type, onChange, onFocus, onBlur, name,\n                    value }) => {\n  return (\n    <div className=\"TextInput\" onKeyDown={onKeyDown}>\n      <label>\n        <span className=\"TextInput-label-text\">{placeholder}</span>\n        <input type={type || 'text'} className=\"TextInput-field\" onChange={onChange}\n               onFocus={onFocus} onBlur={onBlur} name={name}\n               value={value} placeholder={placeholder}/>\n      </label>\n    </div>\n  );\n};\n\nconst TextArea = ({ onKeyDown, placeholder, rows, onChange, onFocus, onBlur, name,\n                    value }) => {\n  return (\n    <div className=\"TextArea\" onKeyDown={onKeyDown}>\n      <label>\n        <span className=\"TextInput-label-text\">{placeholder}</span>\n        <textarea className=\"TextInput-field\" onChange={onChange}\n                  onFocus={onFocus} onBlur={onBlur} name={name} rows={rows || 3}\n                  value={value} placeholder={placeholder}/>\n      </label>\n    </div>\n  );\n};\n\nconst FileUpload = ({ helpText, label, onChange, name, value }) => {\n  const [img, setImg] = useState();\n  const file = value && value[0];\n\n  if (file) {\n    const reader = new FileReader();\n    reader.onload = reader => setImg(reader.target.result);\n    reader.readAsDataURL(file);\n  }\n\n  return (\n    <div className=\"FileUpload\">\n      {img && file &&\n      <div className=\"FileUpload-preview TextInput-field\">\n        <img src={img} alt={file.name} className=\"FileUpload-img\" />\n        <span>{file.name}</span>\n      </div>}\n      <label>\n        <Button secondary label={label} span className=\"test\" />\n        <span className=\"TextInput-helpText\">{helpText}</span>\n        <input type=\"file\" className=\"FileUpload-field\" onChange={onChange}\n               name={name}/>\n      </label>\n    </div>\n  );\n};\n\nexport default { TextInput, TextArea, FileUpload }\n"]},"metadata":{},"sourceType":"module"}