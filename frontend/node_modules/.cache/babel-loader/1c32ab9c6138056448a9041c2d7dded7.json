{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cleanJSXElementLiteralChild;\n\nvar _generated = require(\"../../builders/generated\");\n\nfunction cleanJSXElementLiteralChild(child, args) {\n  const lines = child.value.split(/\\r\\n|\\n|\\r/);\n  let lastNonEmptyLine = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const isFirstLine = i === 0;\n    const isLastLine = i === lines.length - 1;\n    const isLastNonEmptyLine = i === lastNonEmptyLine;\n    let trimmedLine = line.replace(/\\t/g, \" \");\n\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n    }\n\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push((0, _generated.stringLiteral)(str));\n}","map":{"version":3,"sources":["/workspace/covexit/frontend/node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js"],"names":["Object","defineProperty","exports","value","default","cleanJSXElementLiteralChild","_generated","require","child","args","lines","split","lastNonEmptyLine","i","length","match","str","line","isFirstLine","isLastLine","isLastNonEmptyLine","trimmedLine","replace","push","stringLiteral"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,2BAAlB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAAxB;;AAEA,SAASF,2BAAT,CAAqCG,KAArC,EAA4CC,IAA5C,EAAkD;AAChD,QAAMC,KAAK,GAAGF,KAAK,CAACL,KAAN,CAAYQ,KAAZ,CAAkB,YAAlB,CAAd;AACA,MAAIC,gBAAgB,GAAG,CAAvB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIH,KAAK,CAACG,CAAD,CAAL,CAASE,KAAT,CAAe,QAAf,CAAJ,EAA8B;AAC5BH,MAAAA,gBAAgB,GAAGC,CAAnB;AACD;AACF;;AAED,MAAIG,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAMI,IAAI,GAAGP,KAAK,CAACG,CAAD,CAAlB;AACA,UAAMK,WAAW,GAAGL,CAAC,KAAK,CAA1B;AACA,UAAMM,UAAU,GAAGN,CAAC,KAAKH,KAAK,CAACI,MAAN,GAAe,CAAxC;AACA,UAAMM,kBAAkB,GAAGP,CAAC,KAAKD,gBAAjC;AACA,QAAIS,WAAW,GAAGJ,IAAI,CAACK,OAAL,CAAa,KAAb,EAAoB,GAApB,CAAlB;;AAEA,QAAI,CAACJ,WAAL,EAAkB;AAChBG,MAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,OAApB,EAA6B,EAA7B,CAAd;AACD;;AAED,QAAI,CAACH,UAAL,EAAiB;AACfE,MAAAA,WAAW,GAAGA,WAAW,CAACC,OAAZ,CAAoB,OAApB,EAA6B,EAA7B,CAAd;AACD;;AAED,QAAID,WAAJ,EAAiB;AACf,UAAI,CAACD,kBAAL,EAAyB;AACvBC,QAAAA,WAAW,IAAI,GAAf;AACD;;AAEDL,MAAAA,GAAG,IAAIK,WAAP;AACD;AACF;;AAED,MAAIL,GAAJ,EAASP,IAAI,CAACc,IAAL,CAAU,CAAC,GAAGjB,UAAU,CAACkB,aAAf,EAA8BR,GAA9B,CAAV;AACV","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cleanJSXElementLiteralChild;\n\nvar _generated = require(\"../../builders/generated\");\n\nfunction cleanJSXElementLiteralChild(child, args) {\n  const lines = child.value.split(/\\r\\n|\\n|\\r/);\n  let lastNonEmptyLine = 0;\n\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  let str = \"\";\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const isFirstLine = i === 0;\n    const isLastLine = i === lines.length - 1;\n    const isLastNonEmptyLine = i === lastNonEmptyLine;\n    let trimmedLine = line.replace(/\\t/g, \" \");\n\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n    }\n\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push((0, _generated.stringLiteral)(str));\n}"]},"metadata":{},"sourceType":"script"}