{"ast":null,"code":"\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\n(0, _utils.default)(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXNamespacedName\")\n    },\n    value: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXElement\", \"JSXFragment\", \"StringLiteral\", \"JSXExpressionContainer\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\", \"JSXNamespacedName\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXElement\", {\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningElement\")\n    },\n    closingElement: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXClosingElement\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\n(0, _utils.default)(\"JSXEmptyExpression\", {\n  aliases: [\"JSX\"]\n});\n(0, _utils.default)(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"JSXEmptyExpression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  aliases: [\"JSX\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"JSXMemberExpression\", \"JSXIdentifier\")\n    },\n    property: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    namespace: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    },\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\", \"JSXNamespacedName\")\n    },\n    selfClosing: {\n      default: false\n    },\n    attributes: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXAttribute\", \"JSXSpreadAttribute\")))\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  aliases: [\"JSX\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXText\", {\n  aliases: [\"JSX\", \"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningFragment\")\n    },\n    closingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXClosingFragment\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\n(0, _utils.default)(\"JSXOpeningFragment\", {\n  aliases: [\"JSX\", \"Immutable\"]\n});\n(0, _utils.default)(\"JSXClosingFragment\", {\n  aliases: [\"JSX\", \"Immutable\"]\n});","map":{"version":3,"sources":["/workspace/covexit/frontend/node_modules/@babel/types/lib/definitions/jsx.js"],"names":["_utils","_interopRequireWildcard","require","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","default","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","visitor","aliases","fields","name","validate","assertNodeType","value","optional","builder","openingElement","closingElement","children","chain","assertValueType","assertEach","expression","object","property","namespace","selfClosing","attributes","typeParameters","argument","openingFragment","closingFragment"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _utils = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n(0, _utils.default)(\"JSXAttribute\", {\n  visitor: [\"name\", \"value\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXNamespacedName\")\n    },\n    value: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXElement\", \"JSXFragment\", \"StringLiteral\", \"JSXExpressionContainer\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXClosingElement\", {\n  visitor: [\"name\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\", \"JSXNamespacedName\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXElement\", {\n  builder: [\"openingElement\", \"closingElement\", \"children\", \"selfClosing\"],\n  visitor: [\"openingElement\", \"children\", \"closingElement\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingElement: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningElement\")\n    },\n    closingElement: {\n      optional: true,\n      validate: (0, _utils.assertNodeType)(\"JSXClosingElement\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\n(0, _utils.default)(\"JSXEmptyExpression\", {\n  aliases: [\"JSX\"]\n});\n(0, _utils.default)(\"JSXExpressionContainer\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\", \"JSXEmptyExpression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXSpreadChild\", {\n  visitor: [\"expression\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    expression: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXIdentifier\", {\n  builder: [\"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXMemberExpression\", {\n  visitor: [\"object\", \"property\"],\n  aliases: [\"JSX\"],\n  fields: {\n    object: {\n      validate: (0, _utils.assertNodeType)(\"JSXMemberExpression\", \"JSXIdentifier\")\n    },\n    property: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXNamespacedName\", {\n  visitor: [\"namespace\", \"name\"],\n  aliases: [\"JSX\"],\n  fields: {\n    namespace: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    },\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXOpeningElement\", {\n  builder: [\"name\", \"attributes\", \"selfClosing\"],\n  visitor: [\"name\", \"attributes\"],\n  aliases: [\"JSX\", \"Immutable\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"JSXIdentifier\", \"JSXMemberExpression\", \"JSXNamespacedName\")\n    },\n    selfClosing: {\n      default: false\n    },\n    attributes: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXAttribute\", \"JSXSpreadAttribute\")))\n    },\n    typeParameters: {\n      validate: (0, _utils.assertNodeType)(\"TypeParameterInstantiation\", \"TSTypeParameterInstantiation\"),\n      optional: true\n    }\n  }\n});\n(0, _utils.default)(\"JSXSpreadAttribute\", {\n  visitor: [\"argument\"],\n  aliases: [\"JSX\"],\n  fields: {\n    argument: {\n      validate: (0, _utils.assertNodeType)(\"Expression\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXText\", {\n  aliases: [\"JSX\", \"Immutable\"],\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});\n(0, _utils.default)(\"JSXFragment\", {\n  builder: [\"openingFragment\", \"closingFragment\", \"children\"],\n  visitor: [\"openingFragment\", \"children\", \"closingFragment\"],\n  aliases: [\"JSX\", \"Immutable\", \"Expression\"],\n  fields: {\n    openingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXOpeningFragment\")\n    },\n    closingFragment: {\n      validate: (0, _utils.assertNodeType)(\"JSXClosingFragment\")\n    },\n    children: {\n      validate: (0, _utils.chain)((0, _utils.assertValueType)(\"array\"), (0, _utils.assertEach)((0, _utils.assertNodeType)(\"JSXText\", \"JSXExpressionContainer\", \"JSXSpreadChild\", \"JSXElement\", \"JSXFragment\")))\n    }\n  }\n});\n(0, _utils.default)(\"JSXOpeningFragment\", {\n  aliases: [\"JSX\", \"Immutable\"]\n});\n(0, _utils.default)(\"JSXClosingFragment\", {\n  aliases: [\"JSX\", \"Immutable\"]\n});"]},"metadata":{},"sourceType":"script"}