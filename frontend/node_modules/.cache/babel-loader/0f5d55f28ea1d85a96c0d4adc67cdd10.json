{"ast":null,"code":"var _jsxFileName = \"/workspace/covexit/frontend/src/components/ViewWrappers/ViewWrappers.js\";\nimport React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport './ViewWrappers.scss';\n/*            Mobile        Desktop\n  View:       ______        _________\n             |      |      |         |\n             |      |      |         |\n             |______|      |_________| <View><Component /></View>\n\n  Split View: ______        _________  Right side omitted on mobile\n             |      |      |    |    |\n             |   L  |      | L  | R  |  <View>\n             |______|      |____|____|    <ViewSplitter>...</ViewSplitter>\n                                          <ViewSplitter omitOnMobile>...</ViewSplitter>\n                                        </View>\n\n  SplitView with footer:\n              ______        _________  Left main content\n             |   L  |      |    |    | Mobile: Left main top, Right in middle,\n             |   R  |      | L  | R  | left footer at the bottom (usually buttons)\n             |___F__|      |_F__|____| <SplitViewWithFooter left={<Component />} footer={<Component />} right={<Component />} />\n\n\n\n */\n\nconst View = ({\n  children,\n  withPadding\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `View ${withPadding && 'View--padded'}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }\n}, children);\n\nconst ViewSplitter = ({\n  children,\n  omitOnMobile,\n  withPadding\n}) => {\n  const isBigScreen = useMediaQuery({\n    minWidth: 960\n  });\n  return omitOnMobile && !isBigScreen ? false : /*#__PURE__*/React.createElement(\"div\", {\n    className: `ViewSplitter ${withPadding && 'ViewSplitter--padded'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst SplitViewWithFooter = ({\n  left,\n  right,\n  footer\n}) => {\n  const isBigScreen = useMediaQuery({\n    minWidth: 960\n  });\n  return /*#__PURE__*/React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ViewSplitter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, left, isBigScreen && footer), /*#__PURE__*/React.createElement(ViewSplitter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, right), !isBigScreen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ViewSplitter-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }\n  }, footer));\n};\n\nexport default {\n  View,\n  ViewSplitter,\n  SplitViewWithFooter\n};","map":{"version":3,"sources":["/workspace/covexit/frontend/src/components/ViewWrappers/ViewWrappers.js"],"names":["React","useMediaQuery","View","children","withPadding","ViewSplitter","omitOnMobile","isBigScreen","minWidth","SplitViewWithFooter","left","right","footer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAGA,OAAO,qBAAP;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,kBACX;AAAK,EAAA,SAAS,EAAG,QAAOA,WAAW,IAAI,cAAe,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,QADH,CADF;;AAMA,MAAME,YAAY,GAAG,CAAC;AAAEF,EAAAA,QAAF;AAAYG,EAAAA,YAAZ;AAA0BF,EAAAA;AAA1B,CAAD,KAA6C;AAChE,QAAMG,WAAW,GAAGN,aAAa,CAAC;AAAEO,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAjC;AAEA,SAAOF,YAAY,IAAI,CAACC,WAAjB,GAA+B,KAA/B,gBACL;AAAK,IAAA,SAAS,EAAG,gBAAeH,WAAW,IAAI,sBAAuB,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CARD;;AAUA,MAAMM,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA6B;AACvD,QAAML,WAAW,GAAGN,aAAa,CAAC;AAAEO,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAjC;AAEA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IADH,EAEGH,WAAW,IAAIK,MAFlB,CADF,eAKE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CALF,EAQG,CAACJ,WAAD,iBAAgB;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCK,MAAtC,CARnB,CADF;AAYD,CAfD;;AAiBA,eAAe;AAAEV,EAAAA,IAAF;AAAQG,EAAAA,YAAR;AAAsBI,EAAAA;AAAtB,CAAf","sourcesContent":["import React from 'react'\nimport { useMediaQuery } from 'react-responsive'\n\n\nimport './ViewWrappers.scss';\n\n/*            Mobile        Desktop\n  View:       ______        _________\n             |      |      |         |\n             |      |      |         |\n             |______|      |_________| <View><Component /></View>\n\n  Split View: ______        _________  Right side omitted on mobile\n             |      |      |    |    |\n             |   L  |      | L  | R  |  <View>\n             |______|      |____|____|    <ViewSplitter>...</ViewSplitter>\n                                          <ViewSplitter omitOnMobile>...</ViewSplitter>\n                                        </View>\n\n  SplitView with footer:\n              ______        _________  Left main content\n             |   L  |      |    |    | Mobile: Left main top, Right in middle,\n             |   R  |      | L  | R  | left footer at the bottom (usually buttons)\n             |___F__|      |_F__|____| <SplitViewWithFooter left={<Component />} footer={<Component />} right={<Component />} />\n\n\n\n */\n\nconst View = ({ children, withPadding }) => (\n  <div className={`View ${withPadding && 'View--padded'}`}>\n    {children}\n  </div>\n);\n\nconst ViewSplitter = ({ children, omitOnMobile, withPadding }) => {\n  const isBigScreen = useMediaQuery({ minWidth: 960 });\n\n  return omitOnMobile && !isBigScreen ? false : (\n    <div className={`ViewSplitter ${withPadding && 'ViewSplitter--padded'}`}>\n      {children}\n    </div>\n  );\n};\n\nconst SplitViewWithFooter = ({ left, right, footer }) => {\n  const isBigScreen = useMediaQuery({ minWidth: 960 });\n\n  return (\n    <View>\n      <ViewSplitter>\n        {left}\n        {isBigScreen && footer}\n      </ViewSplitter>\n      <ViewSplitter>\n        {right}\n      </ViewSplitter>\n      {!isBigScreen && <div className=\"ViewSplitter-footer\">{footer}</div>}\n    </View>\n  );\n};\n\nexport default { View, ViewSplitter, SplitViewWithFooter }\n"]},"metadata":{},"sourceType":"module"}